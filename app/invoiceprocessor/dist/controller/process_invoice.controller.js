sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/model/json/JSONModel","sap/m/MessageBox","sap/m/MessageToast"],function(e,t,o,r){"use strict";return e.extend("com.rt.invoiceprocessor.controller.process_invoice",{onInit:function(){console.log("Kalam -- controller.process_invoice.js is loaded");var e=new t({selectedFile:null,selectedFileName:"",fileContent:null,isDocumentSelected:false,busy:false,documents:[],apiResponse:null});this.getView().setModel(e,"viewModel");this.loadInvoiceDocuments()},loadInvoiceDocuments:function(){const e=this.getOwnerComponent().getModel();const t=e.bindList("/InvoiceDocuments");t.requestContexts().then(function(e){const t=e.map(e=>e.getObject());this.getView().getModel("viewModel").setProperty("/documents",t)}.bind(this)).catch(function(e){sap.m.MessageBox.error("Error loading documents: "+e.message)})},handleFileChange:function(e){var t=e.getParameter("files")&&e.getParameter("files")[0];if(t){var o=this.getView().getModel("viewModel");var r=new FileReader;r.onload=function(e){var r=e.target.result.split(",")[1];o.setProperty("/selectedFile",t);o.setProperty("/selectedFileName",t.name);o.setProperty("/contentType",t.type)};r.readAsDataURL(t)}},onUploadPress:function(){var e=this;var t=this.getOwnerComponent().getModel();var n=this.getView().getModel("viewModel");var s=n.getProperty("/selectedFile");if(!s){r.show("Please select a file first");return}n.setProperty("/busy",true);var i=new FileReader;i.onload=function(i){var a=i.target.result.split(",")[1];var c=e.getOwnerComponent().getModel();var l=c.bindList("/InvoiceDocuments");var d=l.create({fileContent:JSON.stringify(a),fileName:s.name,contentType:s.type,status:"Created"});t.submitBatch(t.getGroupId()).then(function(){r.show("Document uploaded successfully");n.setProperty("/busy",false);n.setProperty("/selectedFile",null);n.setProperty("/selectedFileName","");e.loadInvoiceDocuments()}).catch(function(e){n.setProperty("/busy",false);o.error("Upload failed: "+oError.message)})};i.readAsDataURL(s)},onSelectionChange:function(e){var t=e.getParameter("listItem");var r=this.getView().getModel("viewModel");var n=this.getOwnerComponent().getModel();if(!t){this.resetView();return}var s=t.getBindingContext();s.requestObject().then(function(e){r.setProperty("/isDocumentSelected",true);var t=this.byId("pdfViewer");var o=n.sServiceUrl+"InvoiceDocuments("+e.ID+")/fileContent";var i=this.getView().byId("idFrame");i.setContent("<iframe name='"+e.fileName+"' src='"+o+"' height='700' width='920'></iframe>");var a=this.byId("invoiceForm");if(a){a.setBindingContext(s)}}.bind(this)).catch(function(e){o.error("Error loading document: "+e.message)})},resetView:function(){var e=this.getView().getModel("viewModel");e.setProperty("/isDocumentSelected",false);e.setProperty("/fileContent",null);var t=this.byId("invoiceForm");if(t){t.unbindElement()}},onProcessWithAI:async function(){const e=this.getView().getModel("viewModel");const t=this.byId("documentsTable").getSelectedItem();var n=this.getOwnerComponent().getModel();if(!t){r.show("Please select a document to process.");return}e.setProperty("/busy",true);const s=t.getBindingContext();const i=await s.requestObject();var a;var c="/returnBase64(...)";var l=n.bindContext(c,null,{});l.setParameter("ID",i.ID);l.execute().then(function(){var e=l.getBoundContext().getObject();a=e.value;if(!a){throw new Error("Failed to fetch file content for the selected document.")}else{this.callNvidiaAPI(a)}}.bind(this)).catch(function(e){o.error(`Error reading filecontent: ${e.message}`);console.error("Error:",e)})},callNvidiaAPI:async function(e){var t=this.getOwnerComponent().getModel();try{var r="/callNvidiaAPI(...)";var n=t.bindContext(r,null,{});n.setParameter("fileContent",e);n.execute().then(function(){}.bind(this)).catch(function(e){o.error(`Error calling Nvidia Destination: ${e.message}`);console.error("Error:",e)})}catch(e){o.error(`Error processing invoice: ${e.message}`);console.error("Error:",e)}finally{oViewModel.setProperty("/busy",false)}},populateFormWithAIResponse:function(e){const t=this.byId("invoiceForm");if(!t)return;const r=t.getBindingContext();const n=e?.choices?.[0]?.message?.content||"";try{const e=JSON.parse(n);r.setProperty("invoiceNumber",e.invoiceNumber||"");r.setProperty("grossAmount",e.totalCost||"");r.setProperty("dueDate",e.dueDate||"");r.setProperty("vendorName",e.vendorName||"")}catch(e){o.error("Failed to parse AI response.");console.error("Parsing Error:",e)}}})});
//# sourceMappingURL=process_invoice.controller.js.map